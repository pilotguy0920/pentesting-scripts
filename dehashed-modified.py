import requests
import argparse
import base64
import json
import csv

DEHASHED_API_URL = 'https://api.dehashed.com/search?query='

DEHASHED_FIELDS = [
    'id', 'email', 'ip_address', 'username', 'password', 'hashed_password',
    'hash_type', 'name', 'vin', 'address', 'phone', 'database_name', 'domain'
]

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-f', '--field', choices=DEHASHED_FIELDS, help='The field to query.', required=True)
    parser.add_argument('-v', '--value', help='The value to query.', required=True)
    parser.add_argument('-a', '--auth', help='The api key & user: email:key.', required=True)
    args = parser.parse_args()

    print('Dehashed API V1.01')

    if not args.field or not args.value:
        print('Missing required parameters:')
        parser.print_usage()
        exit(1)

    query = f"{DEHASHED_API_URL}{args.field}:{args.value}&size=10000"
    headers = {
        'Authorization': f'Basic {base64.b64encode(args.auth.encode()).decode()}',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.3538.77 Safari/537.36',
        'Accept': 'application/json'
    }

    print('Connecting to Dehashed API...')

    res = requests.get(query, headers=headers)

    if res.status_code != 200:
        print(f'Error connecting to Dehashed API. Status code: {res.status_code}')
        exit(1)

    rjson = res.json()

    if 'entries' in rjson and isinstance(rjson['entries'], list):
        entries = []
        unique = []

        for e in rjson['entries']:
            entries.append({'email': e.get('email', ''), 'password': e.get('password', '')})

            if e.get('email') not in unique:
                unique.append(e.get('email', ''))

        print(f'Found {len(entries)} record{"" if len(entries) == 0 else "s"}...')

        base_filename = f'dehashed.{args.value}'

        print(f'Writing raw response file...')

        with open(f'{base_filename}.json', mode='w') as f:
            f.write(json.dumps(rjson))

        print(f'Writing list of credentials...')

        with open(f'{base_filename}.csv', mode='w', newline='') as f:
            headers = ['email', 'password']
            writer = csv.DictWriter(f, fieldnames=headers)

            writer.writeheader()
            writer.writerows(entries)

        print(f'Writing list of unique usernames...')

        with open(f'{base_filename}.unique.txt', mode='w') as f:
            f.write('\n'.join(unique))

        print('Done! Enjoy responsibly...')
    else:
        print('No results found or an error occurred in the response format.')
